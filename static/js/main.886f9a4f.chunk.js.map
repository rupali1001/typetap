{"version":3,"sources":["assets/logo.png","components/Nav/Nav.js","assets/flash.png","components/Landing/Landing.js","components/Footer/Footer.js","components/TryAgain/TryAgain.js","components/ChallengeDetailsCard/ChallengeDetailsCard.js","components/TestLetter/TestLetter.js","components/TypingChallenge/TypingChallenge.js","components/TypingChallengeContainer/TypingChallengeContainer.js","components/TestContainer/TestContainer.js","components/ChallengeSection/ChallengeSection.js","components/App/App.js","index.js"],"names":["Nav","className","src","logo","alt","target","href","rel","Landing","data-aos","options","strings","autoStart","loop","flash","Footer","TryAgain","words","characters","wpm","startAgain","onClick","window","open","ChallengeDetailsCard","cardName","cardValue","TestLetter","individualLetterInfo","statusClassName","correct","incorrect","notAttempted","status","testLetter","TypingChallenge","timeRemaining","timerStarted","testInfo","onInputChange","map","index","onChange","e","value","placeholder","TypingChallengeContainer","selectedParagraph","TestContainer","ChallengeSection","ServiceUrl","defaultState","App","state","fetchNewParagraph","console","log","fetch","then","response","text","data","setState","split","selectedLetter","startTimer","timer","setInterval","timeSpent","parseInt","clearInterval","handleUserInput","inputValue","length","slice","isCorrect","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6YAAe,G,MAAA,IAA0B,kC,eCyB1BA,EArBH,WACR,OACI,sBAAKC,UAAU,gBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,aAAaC,IAAKC,EAAMC,IAAI,SAC3C,mBAAGH,UAAU,kBAAb,wBAEJ,qBAAKA,UAAU,YAAf,SACI,mBACII,OAAO,SACPJ,UAAU,oBACVK,KAAK,qDACLC,IAAI,aAJR,6BCZD,G,MAAA,IAA0B,mC,gBC+B1BC,EA1BC,WACZ,OACI,sBAAKP,UAAU,oBAAf,UACI,sBAAKQ,WAAS,aAAaR,UAAU,eAArC,UACI,oBAAIA,UAAU,iBAAd,+BACA,qBAAKA,UAAU,uBAAf,SACI,cAAC,IAAD,CACIS,QAAS,CACLC,QAAS,CAAC,QAAS,WAAY,UAC/BC,WAAW,EACXC,MAAM,UAKtB,qBAAKZ,UAAU,gBAAf,SACI,qBACIQ,WAAS,YACTR,UAAU,cACVC,IAAKY,EACLV,IAAI,eCRTW,G,MAdA,WACX,OACI,qBAAKd,UAAU,mBAAf,SACI,mBACIK,KAAK,oCACLL,UAAU,cACVI,OAAO,SACPE,IAAI,aAJR,8CCkDGS,G,kBArDE,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,WACxC,OACI,sBAAKnB,UAAU,sBAAf,UACI,8CACA,sBAAKA,UAAU,oBAAf,UACI,8BACI,4CACCiB,KAEL,8BACI,uCACCD,KAEL,8BACI,uCACCE,QAGT,gCACI,wBACIE,QAAS,kBAAMD,KACfnB,UAAU,8BAFd,mBAMA,wBACIoB,QAAS,WACLC,OAAOC,KACH,kFACA,wBACA,yBAGRtB,UAAU,wBARd,mBAYA,wBACIoB,QAAS,WACLC,OAAOC,KACH,0EACA,UACA,yBAGRtB,UAAU,wBARd,2BC7BDuB,G,YATc,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACtC,OACI,sBAAKzB,UAAU,yBAAf,UACI,qBAAKA,UAAU,YAAf,SAA4BwB,IAC5B,qBAAKxB,UAAU,aAAf,SAA6ByB,SCqB1BC,G,YAxBI,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,qBAYZC,EAAkB,CACpBC,QAAS,sBACTC,UAAW,wBACXC,aAAc,6BAChBJ,EAAqBK,QAEvB,OACI,sBAAMhC,UAAS,sBAAiB4B,GAAhC,SACKD,EAAqBM,eCuBnBC,EA1CS,SAAC,GAKlB,IAJHC,EAIE,EAJFA,cACAC,EAGE,EAHFA,aACAC,EAEE,EAFFA,SACAC,EACE,EADFA,cAEA,OACI,sBAAKtC,UAAU,mBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,oBAAGA,UAAU,QAAb,gBAEKmC,EAAgB,EAAIA,EAApB,WAAwCA,MAE7C,mBAAGnC,UAAU,aAAb,UACMoC,GAAgB,sCAG1B,sBAAKpC,UAAU,qBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,0BAAf,SAEKqC,EAASE,KAAI,SAACZ,EAAsBa,GACjC,OACI,cAAC,EAAD,CAEIb,qBAAsBA,GADjBa,UAOzB,qBAAKxC,UAAU,iBAAf,SACI,0BACIyC,SAAU,SAACC,GAAD,OAAOJ,EAAcI,EAAEtC,OAAOuC,QACxC3C,UAAU,WACV4C,YAAY,gCCErBC,EArCkB,SAAC,GAS3B,IARHP,EAQE,EARFA,cACAQ,EAOE,EAPFA,kBACA9B,EAME,EANFA,MACAC,EAKE,EALFA,WACAC,EAIE,EAJFA,IACAiB,EAGE,EAHFA,cACAC,EAEE,EAFFA,aACAC,EACE,EADFA,SAEA,OACI,sBAAKrC,UAAU,6BAAf,UAEI,sBAAKA,UAAU,oBAAf,UAEI,cAAC,EAAD,CAAsBwB,SAAU,QAASC,UAAWT,IAEpD,cAAC,EAAD,CACIQ,SAAU,aACVC,UAAWR,IAGf,cAAC,EAAD,CAAsBO,SAAU,QAASC,UAAWP,OAGxD,qBAAKlB,UAAU,uBAAf,SACI,cAAC,EAAD,CACIsC,cAAeA,EACfH,cAAeA,EACfC,aAAcA,EACdU,kBAAmBA,EACnBT,SAAUA,UCafU,EA3CO,SAAC,GAUhB,IATHD,EASE,EATFA,kBACA9B,EAQE,EARFA,MACAC,EAOE,EAPFA,WACAC,EAME,EANFA,IACAiB,EAKE,EALFA,cACAC,EAIE,EAJFA,aACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,cACAnB,EACE,EADFA,WAEA,OACI,qBAAKnB,UAAU,YAAf,SACI,qBAAKA,UAAU,iBAAf,SACKmC,EAAgB,EACb,qBAAMnC,UAAU,wBAAhB,SACI,cAAC,EAAD,CACImC,cAAeA,EACfC,aAAcA,EACdU,kBAAmBA,EACnB9B,MAAOA,EACPC,WAAYA,EACZC,IAAKA,EACLmB,SAAUA,EACVC,cAAeA,MAIvB,qBAAKtC,UAAU,iBAAf,SACI,cAAC,EAAD,CACIgB,MAAOA,EACPC,WAAYA,EACZC,IAAKA,EACLC,WAAYA,WCJzB6B,EA9BU,SAAC,GAUnB,IATHV,EASE,EATFA,cACAQ,EAQE,EARFA,kBACA9B,EAOE,EAPFA,MACAC,EAME,EANFA,WACAC,EAKE,EALFA,IACAiB,EAIE,EAJFA,cACAC,EAGE,EAHFA,aACAC,EAEE,EAFFA,SACAlB,EACE,EADFA,WAEA,OACI,sBAAKnB,UAAU,8BAAf,UACI,oBAAIQ,WAAS,YAAYR,UAAU,2BAAnC,oCAGA,cAAC,EAAD,CACI8C,kBAAmBA,EACnBX,cAAeA,EACfC,aAAcA,EACdpB,MAAOA,EACPC,WAAYA,EACZC,IAAKA,EACLmB,SAAUA,EACVC,cAAeA,EACfnB,WAAYA,QCrBtB8B,EAAa,yCACbC,EAAe,CACjBJ,kBAAmB,GACnBV,cAAc,EACdD,cALc,GAMdnB,MAAO,EACPC,WAAY,EACZC,IAAK,EACLmB,SAAU,IAoJCc,E,4MAhJXC,MAAQF,E,EAERG,kBAAoB,WAEhBC,QAAQC,IAAI,QAEZC,MAAMP,GACDQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,EAAKC,SAAS,CAAEf,kBAAmBc,IAGnC,IACMvB,EADyBuB,EAAKE,MAAM,IACFvB,KACpC,SAACwB,GACG,MAAO,CACH9B,WAAY8B,EACZ/B,OAAQ,mBAIpB,EAAK6B,SAAL,2BACOX,GADP,IAEIb,WACAS,kBAAmBc,S,EAUnCI,WAAa,WACT,EAAKH,SAAS,CAAEzB,cAAc,IAC9B,IAAM6B,EAAQC,aAAY,WACtB,GAAI,EAAKd,MAAMjB,cAAgB,EAAG,CAE9B,IAAMgC,EApDJ,GAoD4B,EAAKf,MAAMjB,cACnCjB,EACFiD,EAAY,EACL,EAAKf,MAAMpC,MAAQmD,EAvD5B,GAwDQ,EACV,EAAKN,SAAS,CACV1B,cAAe,EAAKiB,MAAMjB,cAAgB,EAC1CjB,IAAKkD,SAASlD,UAGlBmD,cAAcJ,KAEnB,M,EAGP9C,WAAa,kBAAM,EAAKkC,qB,EAExBiB,gBAAkB,SAACC,GACV,EAAKnB,MAAMhB,cAAc,EAAK4B,aAmBnC,IAAM/C,EAAasD,EAAWC,OACxBxD,EAAQuD,EAAWT,MAAM,KAAKU,OAC9BhC,EAAQvB,EAAa,EAE3B,GAAIuB,EAAQ,EACR,EAAKqB,SAAS,CACVxB,SAAS,CACL,CACIJ,WAAY,EAAKmB,MAAMf,SAAS,GAAGJ,WACnCD,OAAQ,iBAHR,mBAKD,EAAKoB,MAAMf,SAASoC,MAAM,KAEjCxD,aACAD,eAIR,GAAIwB,GAAS,EAAKY,MAAMN,kBAAkB0B,OACtC,EAAKX,SAAS,CAAE5C,aAAYD,cADhC,CAKA,IAAMqB,EAAW,EAAKe,MAAMf,SACtBG,IAAU,EAAKY,MAAMN,kBAAkB0B,OAAS,IAClDnC,EAASG,EAAQ,GAAGR,OAAS,gBAGjC,IAAM0C,EAAYH,EAAW/B,KAAWH,EAASG,GAAOP,WAGxDI,EAASG,GAAOR,OAAS0C,EAAY,UAAY,YAGjD,EAAKb,SAAS,CACVxB,WACArB,QACAC,iB,uDAnFR,WACI0D,KAAKtB,sB,oBAsFT,WAAU,IAAD,OACL,OACI,sBAAKrD,UAAU,MAAf,UAEI,cAAC,EAAD,IAEA,cAAC,EAAD,IAEA,cAAC,EAAD,CACI8C,kBAAmB6B,KAAKvB,MAAMN,kBAC9B9B,MAAO2D,KAAKvB,MAAMpC,MAClBC,WAAY0D,KAAKvB,MAAMnC,WACvBkB,cAAewC,KAAKvB,MAAMjB,cAC1BC,aAAcuC,KAAKvB,MAAMhB,aACzBC,SAAUsC,KAAKvB,MAAMf,SACrBC,cAAeqC,KAAKL,gBACpBpD,IAAKyD,KAAKvB,MAAMlC,IAChBC,WAAYwD,KAAKxD,aAErB,wBAAQC,QAAS,kBAAK,EAAKD,cAA3B,mBAEA,cAAC,EAAD,W,GA3IEyD,IAAMC,WCfxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.886f9a4f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f91f10ce.png\";","import React from 'react';\r\nimport logo from './../../assets/logo.png';\r\nimport './Nav.css';\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"nav-left\">\r\n                <img className=\"flash-logo\" src={logo} alt=\"logo\" />\r\n                <p className=\"flash-logo-text\">Typetap</p>\r\n            </div>\r\n            <div className=\"nav-right\">\r\n                <a\r\n                    target=\"_blank\"\r\n                    className=\"nav-linkedin-link\"\r\n                    href=\"https://www.linkedin.com/in/rupali-verma-1a266517a\"\r\n                    rel=\"noreferrer\"\r\n                >\r\n                    Portfolio\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","export default __webpack_public_path__ + \"static/media/flash.b37a3591.png\";","import React from 'react';\r\nimport './Landing.css';\r\nimport flash from './../../assets/flash.png';\r\nimport Typewriter from 'typewriter-effect';\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <div className=\"landing-container\">\r\n            <div data-aos=\"fade-right\" className=\"landing-left\">\r\n                <h1 className=\"landing-header\">Can you type.....</h1>\r\n                <div className=\"typewriter-container\">\r\n                    <Typewriter\r\n                        options={{\r\n                            strings: ['fast?', 'correct?', 'quick?'],\r\n                            autoStart: true,\r\n                            loop: true,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"landing-right\">\r\n                <img\r\n                    data-aos=\"fade-left\"\r\n                    className=\"flash-image\"\r\n                    src={flash}\r\n                    alt=\"hero\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Landing;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer-container\">\r\n            <a\r\n                href=\"https://github.com/vrupali-create\"\r\n                className=\"footer-link\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n            >\r\n                Check out my other projects!\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './TryAgain.css';\r\n\r\nconst TryAgain = ({ words, characters, wpm, startAgain }) => {\r\n    return (\r\n        <div className=\"try-again-container\">\r\n            <h1>Test Results</h1>\r\n            <div className=\"results-container\">\r\n                <p>\r\n                    <b>Characters:</b>\r\n                    {characters}\r\n                </p>\r\n                <p>\r\n                    <b>Words:</b>\r\n                    {words}\r\n                </p>\r\n                <p>\r\n                    <b>Speed:</b>\r\n                    {wpm}\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    onClick={() => startAgain()}\r\n                    className=\"end-buttons start-again-btn\"\r\n                >\r\n                    Retry\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        window.open(\r\n                            'https://www.facebook.com/sharer/sharer.php?u=https://github.com/vrupali-create/',\r\n                            'facebook-share-dailog',\r\n                            'width=800,height=600'\r\n                        );\r\n                    }}\r\n                    className=\"end-buttons share-btn\"\r\n                >\r\n                    Share\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        window.open(\r\n                            'https://twitter.com/intent/tweet?text=https://github.com/vrupali-create',\r\n                            'twitter',\r\n                            'width=800,height=600'\r\n                        );\r\n                    }}\r\n                    className=\"end-buttons tweet-btn\"\r\n                >\r\n                    Tweet\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default TryAgain;\r\n","import React from 'react';\r\nimport './ChallengeDetailsCard.css';\r\nconst ChallengeDetailsCard = ({ cardName, cardValue }) => {\r\n    return (\r\n        <div className=\"details-card-container\">\r\n            <div className=\"card-name\">{cardName}</div>\r\n            <div className=\"card-value\">{cardValue}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChallengeDetailsCard;\r\n","import React from 'react';\r\nimport './TestLetter.css';\r\n\r\nconst TestLetter = ({ individualLetterInfo }) => {\r\n    // const { status } = individualLetterInfo;\r\n    // let statusClass;\r\n\r\n    // if (status === 'correct') {\r\n    //     statusClass = 'test-letter-correct';\r\n    // } else if (status === 'incorrect') {\r\n    //     statusClass = 'test-letter-incorrect';\r\n    // } else {\r\n    //     statusClass = 'test-letter-not-attempted';\r\n    // }\r\n    //  New way to do the same\r\n    const statusClassName = {\r\n        correct: 'test-letter-correct',\r\n        incorrect: 'test-letter-incorrect',\r\n        notAttempted: 'test-letter-not-attempted',\r\n    }[individualLetterInfo.status];\r\n\r\n    return (\r\n        <span className={`test-letter ${statusClassName}`}>\r\n            {individualLetterInfo.testLetter}\r\n        </span>\r\n    );\r\n};\r\nexport default TestLetter;\r\n","import React from 'react';\r\nimport './TypingChallenge.css';\r\nimport TestLetter from '../TestLetter/TestLetter';\r\n\r\nconst TypingChallenge = ({\r\n    timeRemaining,\r\n    timerStarted,\r\n    testInfo,\r\n    onInputChange,\r\n}) => {\r\n    return (\r\n        <div className=\"typing-challenge\">\r\n            <div className=\"timer-container\">\r\n                <p className=\"timer\">\r\n                    00:\r\n                    {timeRemaining > 9 ? timeRemaining : `0${timeRemaining}`}\r\n                </p>\r\n                <p className=\"timer-info\">\r\n                    {!timerStarted && 'Start typing to start the test'}\r\n                </p>\r\n            </div>\r\n            <div className=\"textarea-container\">\r\n                <div className=\"textarea-left\">\r\n                    <div className=\"textarea test-paragraph\">\r\n                        {/* {selectedParagraph} */}\r\n                        {testInfo.map((individualLetterInfo, index) => {\r\n                            return (\r\n                                <TestLetter\r\n                                    key={index}\r\n                                    individualLetterInfo={individualLetterInfo}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"textarea-right\">\r\n                    <textarea\r\n                        onChange={(e) => onInputChange(e.target.value)}\r\n                        className=\"textarea\"\r\n                        placeholder=\"start typing here \"\r\n                    ></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default TypingChallenge;\r\n","import React from 'react';\r\nimport './TypingChallengeContainer.css';\r\nimport ChallengeDetailsCard from '../ChallengeDetailsCard/ChallengeDetailsCard';\r\nimport TypingChallenge from '../TypingChallenge/TypingChallenge';\r\nconst TypingChallengeContainer = ({\r\n    onInputChange,\r\n    selectedParagraph,\r\n    words,\r\n    characters,\r\n    wpm,\r\n    timeRemaining,\r\n    timerStarted,\r\n    testInfo,\r\n}) => {\r\n    return (\r\n        <div className=\"typing-challenge-container\">\r\n            {/* //  Details Section */}\r\n            <div className=\"details-container\">\r\n                {/* Words typed */}\r\n                <ChallengeDetailsCard cardName={'Words'} cardValue={words} />\r\n                {/* characters typed */}\r\n                <ChallengeDetailsCard\r\n                    cardName={'Characters'}\r\n                    cardValue={characters}\r\n                />\r\n                {/* speed */}\r\n                <ChallengeDetailsCard cardName={'Speed'} cardValue={wpm} />\r\n            </div>\r\n            {/* the real challenge */}\r\n            <div className=\"typewriter-container\">\r\n                <TypingChallenge\r\n                    onInputChange={onInputChange}\r\n                    timeRemaining={timeRemaining}\r\n                    timerStarted={timerStarted}\r\n                    selectedParagraph={selectedParagraph}\r\n                    testInfo={testInfo}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default TypingChallengeContainer;\r\n","import React from 'react';\r\nimport './TestContainer.css';\r\nimport TryAgain from '../TryAgain/TryAgain';\r\nimport TypingChallengeContainer from '../TypingChallengeContainer/TypingChallengeContainer';\r\n\r\nconst TestContainer = ({\r\n    selectedParagraph,\r\n    words,\r\n    characters,\r\n    wpm,\r\n    timeRemaining,\r\n    timerStarted,\r\n    testInfo,\r\n    onInputChange,\r\n    startAgain,\r\n}) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"test-container\">\r\n                {timeRemaining > 0 ? (\r\n                    <div  className=\"typing-challenge-cont\">\r\n                        <TypingChallengeContainer\r\n                            timeRemaining={timeRemaining}\r\n                            timerStarted={timerStarted}\r\n                            selectedParagraph={selectedParagraph}\r\n                            words={words}\r\n                            characters={characters}\r\n                            wpm={wpm}\r\n                            testInfo={testInfo}\r\n                            onInputChange={onInputChange}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"try-again-cont\">\r\n                        <TryAgain\r\n                            words={words}\r\n                            characters={characters}\r\n                            wpm={wpm}\r\n                            startAgain={startAgain}\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n                {/* < */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default TestContainer;\r\n","import React from 'react';\r\nimport './ChallengeSection.css';\r\nimport TestContainer from '../TestContainer/TestContainer';\r\n\r\nconst ChallengeSection = ({\r\n    onInputChange,\r\n    selectedParagraph,\r\n    words,\r\n    characters,\r\n    wpm,\r\n    timeRemaining,\r\n    timerStarted,\r\n    testInfo,\r\n    startAgain,\r\n}) => {\r\n    return (\r\n        <div className=\"challenge-section-container\">\r\n            <h1 data-aos=\"fade-down\" className=\"challenge-section-header\">\r\n                Take a speed test now!\r\n            </h1>\r\n            <TestContainer\r\n                selectedParagraph={selectedParagraph}\r\n                timeRemaining={timeRemaining}\r\n                timerStarted={timerStarted}\r\n                words={words}\r\n                characters={characters}\r\n                wpm={wpm}\r\n                testInfo={testInfo}\r\n                onInputChange={onInputChange}\r\n                startAgain={startAgain}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nexport default ChallengeSection;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Nav from './../Nav/Nav';\r\nimport Landing from './../Landing/Landing';\r\nimport Footer from './../Footer/Footer';\r\nimport ChallengeSection from '../ChallengeSection/ChallengeSection';\r\n\r\nconst TotalTime = 60;\r\nconst ServiceUrl = 'http://metaphorpsum.com/paragraphs/1/9';\r\nconst defaultState = {\r\n    selectedParagraph: '',\r\n    timerStarted: false,\r\n    timeRemaining: TotalTime,\r\n    words: 0,\r\n    characters: 0,\r\n    wpm: 0,\r\n    testInfo: [],\r\n};\r\n\r\nclass App extends React.Component {\r\n    state = defaultState;\r\n\r\n    fetchNewParagraph = () => {\r\n\r\n        console.log(\"exec\")\r\n\r\n        fetch(ServiceUrl)\r\n            .then((response) => response.text())\r\n            .then((data) => {\r\n                this.setState({ selectedParagraph: data });\r\n\r\n\r\n                const selectedParagraphArray = data.split('');\r\n                const testInfo = selectedParagraphArray.map(\r\n                    (selectedLetter) => {\r\n                        return {\r\n                            testLetter: selectedLetter,\r\n                            status: 'notAttempted',\r\n                        };\r\n                    }\r\n                );\r\n                this.setState({\r\n                    ...defaultState,\r\n                    testInfo,\r\n                    selectedParagraph: data,\r\n                });\r\n            });\r\n        //when key and value are same we can just write one\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.fetchNewParagraph();\r\n    }\r\n    //    setInterval runs same code after regular intervals\r\n    startTimer = () => {\r\n        this.setState({ timerStarted: true });\r\n        const timer = setInterval(() => {\r\n            if (this.state.timeRemaining > 0) {\r\n                //changing wpm\r\n                const timeSpent = TotalTime - this.state.timeRemaining;\r\n                const wpm =\r\n                    timeSpent > 0 //if 0 then in denominatir would be infinity\r\n                        ? (this.state.words / timeSpent) * TotalTime\r\n                        : 0;\r\n                this.setState({\r\n                    timeRemaining: this.state.timeRemaining - 1,\r\n                    wpm: parseInt(wpm), //as we want value in int\r\n                });\r\n            } else {\r\n                clearInterval(timer);\r\n            }\r\n        }, 1000);\r\n    };\r\n\r\n    startAgain = () => this.fetchNewParagraph();\r\n\r\n    handleUserInput = (inputValue) => {\r\n        if (!this.state.timerStarted) this.startTimer();\r\n        /*\r\n        Algorithm\r\n        1.Handle underflow case(means I havent typed anything)-all the characters should be shown as not attempted\r\n           early exit\r\n        2.Handle the overflow case(You finish test before the time given)-early exit\r\n        3.Handle the backspace case(here we are not handling the case when the content is selected and removed all at once.)-\r\n         Mark [index+1] element as not-Attempted(irrespective to whether the index is leass than zero)\r\n         Don't forgrt to check the overflow case here.\r\n         ([index+1]->is out of bound,when the index ===length-1)\r\n        4.Update the status in the test info\r\n           - Find out the last character in the inputValue and its index\r\n           -Check if the character at same index in testInfo(state) matches\r\n           -yes->\"correct\"\r\n            No->'incorrect'\r\n        5.Irrespective of the case,characters,words and speed(wpm) can be updated\r\n\r\n        */\r\n\r\n        const characters = inputValue.length;\r\n        const words = inputValue.split(' ').length; //whenever you find space split it\r\n        const index = characters - 1;\r\n        //underflow case\r\n        if (index < 0) {\r\n            this.setState({\r\n                testInfo: [\r\n                    {\r\n                        testLetter: this.state.testInfo[0].testLetter,\r\n                        status: 'notAttempted',\r\n                    },\r\n                    ...this.state.testInfo.slice(1), //rest and spread\r\n                ],\r\n                characters,\r\n                words,\r\n            });\r\n            return;\r\n        }\r\n        if (index >= this.state.selectedParagraph.length) {\r\n            this.setState({ characters, words });\r\n            return;\r\n        }\r\n        //Make a copy of testInfo\r\n        const testInfo = this.state.testInfo;\r\n        if (!(index === this.state.selectedParagraph.length - 1))\r\n            testInfo[index + 1].status = 'notAttempted';\r\n\r\n        //check for the correct typed letter\r\n        const isCorrect = inputValue[index] === testInfo[index].testLetter;\r\n\r\n        //Update the testInfo\r\n        testInfo[index].status = isCorrect ? 'correct' : 'incorrect';\r\n\r\n        //Update the state\r\n        this.setState({\r\n            testInfo,\r\n            words,\r\n            characters,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                {/*Nav section*/}\r\n                <Nav />\r\n                {/*Landing Page*/}\r\n                <Landing />\r\n                {/*Challenge section*/}\r\n                <ChallengeSection\r\n                    selectedParagraph={this.state.selectedParagraph}\r\n                    words={this.state.words}\r\n                    characters={this.state.characters}\r\n                    timeRemaining={this.state.timeRemaining}\r\n                    timerStarted={this.state.timerStarted}\r\n                    testInfo={this.state.testInfo}\r\n                    onInputChange={this.handleUserInput}\r\n                    wpm={this.state.wpm}\r\n                    startAgain={this.startAgain}\r\n                />\r\n                <button onClick={()=> this.startAgain()}>Retry</button>\r\n                {/*Footer*/}\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}